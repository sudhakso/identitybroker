// Code generated by protoc-gen-go. DO NOT EDIT.
// source: provider.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Provider_State int32

const (
	Provider_ENABLED  Provider_State = 0
	Provider_DISABLED Provider_State = 1
	Provider_ERROR    Provider_State = 2
)

var Provider_State_name = map[int32]string{
	0: "ENABLED",
	1: "DISABLED",
	2: "ERROR",
}

var Provider_State_value = map[string]int32{
	"ENABLED":  0,
	"DISABLED": 1,
	"ERROR":    2,
}

func (x Provider_State) String() string {
	return proto.EnumName(Provider_State_name, int32(x))
}

func (Provider_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c6a9f3c02af3d1c8, []int{3, 0}
}

type Credential struct {
	ApiKey               string   `protobuf:"bytes,1,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
	AuthUrl              string   `protobuf:"bytes,3,opt,name=authUrl,proto3" json:"authUrl,omitempty"`
	Base64Cert           string   `protobuf:"bytes,4,opt,name=base64Cert,proto3" json:"base64Cert,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Credential) Reset()         { *m = Credential{} }
func (m *Credential) String() string { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()    {}
func (*Credential) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6a9f3c02af3d1c8, []int{0}
}

func (m *Credential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credential.Unmarshal(m, b)
}
func (m *Credential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credential.Marshal(b, m, deterministic)
}
func (m *Credential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credential.Merge(m, src)
}
func (m *Credential) XXX_Size() int {
	return xxx_messageInfo_Credential.Size(m)
}
func (m *Credential) XXX_DiscardUnknown() {
	xxx_messageInfo_Credential.DiscardUnknown(m)
}

var xxx_messageInfo_Credential proto.InternalMessageInfo

func (m *Credential) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *Credential) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Credential) GetAuthUrl() string {
	if m != nil {
		return m.AuthUrl
	}
	return ""
}

func (m *Credential) GetBase64Cert() string {
	if m != nil {
		return m.Base64Cert
	}
	return ""
}

type ProviderRegistrationOpts struct {
	Namespace            string      `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ProviderType         string      `protobuf:"bytes,2,opt,name=providerType,proto3" json:"providerType,omitempty"`
	Cred                 *Credential `protobuf:"bytes,3,opt,name=cred,proto3" json:"cred,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ProviderRegistrationOpts) Reset()         { *m = ProviderRegistrationOpts{} }
func (m *ProviderRegistrationOpts) String() string { return proto.CompactTextString(m) }
func (*ProviderRegistrationOpts) ProtoMessage()    {}
func (*ProviderRegistrationOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6a9f3c02af3d1c8, []int{1}
}

func (m *ProviderRegistrationOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProviderRegistrationOpts.Unmarshal(m, b)
}
func (m *ProviderRegistrationOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProviderRegistrationOpts.Marshal(b, m, deterministic)
}
func (m *ProviderRegistrationOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderRegistrationOpts.Merge(m, src)
}
func (m *ProviderRegistrationOpts) XXX_Size() int {
	return xxx_messageInfo_ProviderRegistrationOpts.Size(m)
}
func (m *ProviderRegistrationOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderRegistrationOpts.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderRegistrationOpts proto.InternalMessageInfo

func (m *ProviderRegistrationOpts) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ProviderRegistrationOpts) GetProviderType() string {
	if m != nil {
		return m.ProviderType
	}
	return ""
}

func (m *ProviderRegistrationOpts) GetCred() *Credential {
	if m != nil {
		return m.Cred
	}
	return nil
}

type RegistrationStatus struct {
	Error                bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	OriginalError        string   `protobuf:"bytes,2,opt,name=originalError,proto3" json:"originalError,omitempty"`
	ProviderId           string   `protobuf:"bytes,3,opt,name=providerId,proto3" json:"providerId,omitempty"`
	ProviderNamespace    string   `protobuf:"bytes,4,opt,name=providerNamespace,proto3" json:"providerNamespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegistrationStatus) Reset()         { *m = RegistrationStatus{} }
func (m *RegistrationStatus) String() string { return proto.CompactTextString(m) }
func (*RegistrationStatus) ProtoMessage()    {}
func (*RegistrationStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6a9f3c02af3d1c8, []int{2}
}

func (m *RegistrationStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegistrationStatus.Unmarshal(m, b)
}
func (m *RegistrationStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegistrationStatus.Marshal(b, m, deterministic)
}
func (m *RegistrationStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegistrationStatus.Merge(m, src)
}
func (m *RegistrationStatus) XXX_Size() int {
	return xxx_messageInfo_RegistrationStatus.Size(m)
}
func (m *RegistrationStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_RegistrationStatus.DiscardUnknown(m)
}

var xxx_messageInfo_RegistrationStatus proto.InternalMessageInfo

func (m *RegistrationStatus) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *RegistrationStatus) GetOriginalError() string {
	if m != nil {
		return m.OriginalError
	}
	return ""
}

func (m *RegistrationStatus) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *RegistrationStatus) GetProviderNamespace() string {
	if m != nil {
		return m.ProviderNamespace
	}
	return ""
}

type Provider struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Namespace            string          `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	State                Provider_State  `protobuf:"varint,3,opt,name=state,proto3,enum=api.Provider_State" json:"state,omitempty"`
	ProviderType         string          `protobuf:"bytes,4,opt,name=providerType,proto3" json:"providerType,omitempty"`
	ResourcePathprefix   string          `protobuf:"bytes,5,opt,name=resourcePathprefix,proto3" json:"resourcePathprefix,omitempty"`
	ResourceTypes        []*ResourceType `protobuf:"bytes,6,rep,name=resourceTypes,proto3" json:"resourceTypes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Provider) Reset()         { *m = Provider{} }
func (m *Provider) String() string { return proto.CompactTextString(m) }
func (*Provider) ProtoMessage()    {}
func (*Provider) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6a9f3c02af3d1c8, []int{3}
}

func (m *Provider) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provider.Unmarshal(m, b)
}
func (m *Provider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provider.Marshal(b, m, deterministic)
}
func (m *Provider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provider.Merge(m, src)
}
func (m *Provider) XXX_Size() int {
	return xxx_messageInfo_Provider.Size(m)
}
func (m *Provider) XXX_DiscardUnknown() {
	xxx_messageInfo_Provider.DiscardUnknown(m)
}

var xxx_messageInfo_Provider proto.InternalMessageInfo

func (m *Provider) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Provider) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Provider) GetState() Provider_State {
	if m != nil {
		return m.State
	}
	return Provider_ENABLED
}

func (m *Provider) GetProviderType() string {
	if m != nil {
		return m.ProviderType
	}
	return ""
}

func (m *Provider) GetResourcePathprefix() string {
	if m != nil {
		return m.ResourcePathprefix
	}
	return ""
}

func (m *Provider) GetResourceTypes() []*ResourceType {
	if m != nil {
		return m.ResourceTypes
	}
	return nil
}

func init() {
	proto.RegisterEnum("api.Provider_State", Provider_State_name, Provider_State_value)
	proto.RegisterType((*Credential)(nil), "api.Credential")
	proto.RegisterType((*ProviderRegistrationOpts)(nil), "api.ProviderRegistrationOpts")
	proto.RegisterType((*RegistrationStatus)(nil), "api.RegistrationStatus")
	proto.RegisterType((*Provider)(nil), "api.Provider")
}

func init() { proto.RegisterFile("provider.proto", fileDescriptor_c6a9f3c02af3d1c8) }

var fileDescriptor_c6a9f3c02af3d1c8 = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x4d, 0x9c, 0x47, 0x93, 0x9b, 0x07, 0xc9, 0xa5, 0x05, 0x2b, 0x02, 0x54, 0x19, 0x16, 0x45,
	0x82, 0x2c, 0x42, 0x55, 0x16, 0xac, 0xda, 0x26, 0xaa, 0x22, 0xa2, 0xb4, 0x9a, 0xc2, 0x07, 0x4c,
	0xe2, 0x4b, 0x3a, 0x22, 0xb5, 0xad, 0x99, 0x49, 0x45, 0xd9, 0xf1, 0x23, 0xf0, 0x85, 0xfc, 0x03,
	0xf2, 0xd8, 0x93, 0xda, 0x49, 0x24, 0x16, 0xb0, 0x3c, 0xe7, 0xdc, 0xc7, 0xb9, 0xc7, 0x23, 0x43,
	0x3b, 0x92, 0xe1, 0x9d, 0xf0, 0x49, 0xf6, 0x23, 0x19, 0xea, 0x10, 0x4b, 0x3c, 0x12, 0xbd, 0xb6,
	0x24, 0x15, 0xae, 0xe4, 0x9c, 0x12, 0xb2, 0x77, 0x60, 0xf1, 0x4c, 0x04, 0xbe, 0x08, 0x16, 0x09,
	0xed, 0x7d, 0x07, 0x38, 0x97, 0xe4, 0x53, 0xa0, 0x05, 0x5f, 0xe2, 0x13, 0xa8, 0xf2, 0x48, 0x7c,
	0xa4, 0x7b, 0xb7, 0x78, 0x58, 0x3c, 0xaa, 0xb3, 0x14, 0x61, 0x0f, 0x6a, 0xf3, 0xa5, 0xa0, 0x40,
	0x8f, 0x7d, 0xd7, 0x31, 0xca, 0x1a, 0xa3, 0x0b, 0x7b, 0x7c, 0xa5, 0x6f, 0x3e, 0xcb, 0xa5, 0x5b,
	0x32, 0x92, 0x85, 0xf8, 0x02, 0x60, 0xc6, 0x15, 0x9d, 0x1c, 0x9f, 0x93, 0xd4, 0x6e, 0xd9, 0x88,
	0x19, 0xc6, 0xfb, 0x51, 0x04, 0xf7, 0x2a, 0xb5, 0xce, 0x68, 0x21, 0x94, 0x96, 0x5c, 0x8b, 0x30,
	0xb8, 0x8c, 0xb4, 0xc2, 0x67, 0x50, 0x0f, 0xf8, 0x2d, 0xa9, 0x88, 0xcf, 0x29, 0x75, 0xf3, 0x40,
	0xa0, 0x07, 0x4d, 0x7b, 0xf4, 0xa7, 0xfb, 0x88, 0x52, 0x53, 0x39, 0x0e, 0x5f, 0x42, 0x79, 0x2e,
	0xc9, 0x37, 0xae, 0x1a, 0x83, 0x47, 0x7d, 0x1e, 0x89, 0xfe, 0xc3, 0xad, 0xcc, 0x88, 0xde, 0xcf,
	0x22, 0x60, 0x76, 0xf7, 0xb5, 0xe6, 0x7a, 0xa5, 0x70, 0x1f, 0x2a, 0x24, 0x65, 0x28, 0xcd, 0xe6,
	0x1a, 0x4b, 0x00, 0xbe, 0x82, 0x56, 0x28, 0xc5, 0x42, 0x04, 0x7c, 0x39, 0x32, 0x6a, 0xb2, 0x36,
	0x4f, 0xc6, 0x67, 0x5b, 0x1f, 0x63, 0x3f, 0xcd, 0x24, 0xc3, 0xe0, 0x1b, 0xe8, 0x5a, 0x34, 0x5d,
	0x5f, 0x98, 0xa4, 0xb3, 0x2d, 0x78, 0xbf, 0x1c, 0xa8, 0xd9, 0x90, 0xb0, 0x0d, 0x8e, 0xf0, 0xd3,
	0x34, 0x1c, 0xe1, 0xe7, 0x43, 0x72, 0x36, 0x43, 0x7a, 0x0d, 0x15, 0xa5, 0xb9, 0x26, 0xe3, 0xa1,
	0x3d, 0x78, 0x6c, 0x12, 0xb0, 0xb3, 0xfa, 0xf1, 0xa5, 0xc4, 0x92, 0x8a, 0xad, 0x3c, 0xcb, 0x3b,
	0xf2, 0xec, 0x03, 0xda, 0x37, 0x74, 0xc5, 0xf5, 0x4d, 0x24, 0xe9, 0x8b, 0xf8, 0xe6, 0x56, 0x4c,
	0xe5, 0x0e, 0x05, 0xdf, 0x43, 0xcb, 0xb2, 0x71, 0xbf, 0x72, 0xab, 0x87, 0xa5, 0xa3, 0xc6, 0xa0,
	0x6b, 0x6c, 0xb0, 0x8c, 0xc2, 0xf2, 0x75, 0xde, 0x5b, 0xa8, 0x18, 0x73, 0xd8, 0x80, 0xbd, 0xd1,
	0xf4, 0xf4, 0x6c, 0x32, 0x1a, 0x76, 0x0a, 0xd8, 0x84, 0xda, 0x70, 0x7c, 0x9d, 0xa0, 0x22, 0xd6,
	0xa1, 0x32, 0x62, 0xec, 0x92, 0x75, 0x9c, 0xc1, 0xef, 0x12, 0x74, 0xec, 0xb8, 0x75, 0x52, 0x93,
	0x98, 0x8b, 0x3f, 0x2b, 0xc9, 0x35, 0xf7, 0x3c, 0x17, 0xc0, 0xe6, 0x8b, 0xeb, 0x3d, 0x4d, 0x8d,
	0x6d, 0x3e, 0x06, 0xaf, 0x80, 0x53, 0xc0, 0x21, 0xfd, 0xc7, 0x79, 0xc7, 0xd0, 0xb8, 0x20, 0x6d,
	0x4d, 0xe3, 0xbe, 0xa9, 0xcc, 0x30, 0xa6, 0xbf, 0x95, 0x0b, 0xca, 0x2b, 0xe0, 0x09, 0x34, 0x27,
	0x42, 0xfd, 0xad, 0xad, 0x9d, 0x6b, 0x8b, 0xb7, 0x7d, 0x80, 0x4e, 0xa6, 0xc8, 0x64, 0x8c, 0xdd,
	0x9c, 0x77, 0xd3, 0x88, 0x5b, 0x1f, 0x26, 0x6e, 0xbe, 0x00, 0x3c, 0x55, 0x4a, 0x2c, 0x02, 0x2b,
	0x4c, 0x44, 0xf0, 0x15, 0xdd, 0x5c, 0xed, 0x59, 0xf2, 0x4b, 0x31, 0x53, 0x0e, 0x76, 0x29, 0xe9,
	0x20, 0x46, 0xb7, 0xe1, 0x1d, 0xfd, 0xe3, 0xa0, 0x59, 0xd5, 0xfc, 0xb9, 0xde, 0xfd, 0x09, 0x00,
	0x00, 0xff, 0xff, 0xb1, 0xf4, 0x00, 0xa9, 0xf7, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceProviderClient is the client API for ResourceProvider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceProviderClient interface {
	RegisterProvider(ctx context.Context, in *ProviderRegistrationOpts, opts ...grpc.CallOption) (*RegistrationStatus, error)
	DeRegisterProvider(ctx context.Context, in *ProviderRegistrationOpts, opts ...grpc.CallOption) (*RegistrationStatus, error)
	GetResource(ctx context.Context, in *GetResourceOpts, opts ...grpc.CallOption) (*Resource, error)
	ListResource(ctx context.Context, in *GetResourceOpts, opts ...grpc.CallOption) (*Resources, error)
	GetResourceTypes(ctx context.Context, in *ProviderOpts, opts ...grpc.CallOption) (*ResourceTypes, error)
	AssignResourceLink(ctx context.Context, in *ResourceBindingOpts, opts ...grpc.CallOption) (*ResourceBindings, error)
	RemoveResourceLink(ctx context.Context, in *ResourceBindingOpts, opts ...grpc.CallOption) (*ResourceBindings, error)
}

type resourceProviderClient struct {
	cc *grpc.ClientConn
}

func NewResourceProviderClient(cc *grpc.ClientConn) ResourceProviderClient {
	return &resourceProviderClient{cc}
}

func (c *resourceProviderClient) RegisterProvider(ctx context.Context, in *ProviderRegistrationOpts, opts ...grpc.CallOption) (*RegistrationStatus, error) {
	out := new(RegistrationStatus)
	err := c.cc.Invoke(ctx, "/api.ResourceProvider/RegisterProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceProviderClient) DeRegisterProvider(ctx context.Context, in *ProviderRegistrationOpts, opts ...grpc.CallOption) (*RegistrationStatus, error) {
	out := new(RegistrationStatus)
	err := c.cc.Invoke(ctx, "/api.ResourceProvider/DeRegisterProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceProviderClient) GetResource(ctx context.Context, in *GetResourceOpts, opts ...grpc.CallOption) (*Resource, error) {
	out := new(Resource)
	err := c.cc.Invoke(ctx, "/api.ResourceProvider/GetResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceProviderClient) ListResource(ctx context.Context, in *GetResourceOpts, opts ...grpc.CallOption) (*Resources, error) {
	out := new(Resources)
	err := c.cc.Invoke(ctx, "/api.ResourceProvider/ListResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceProviderClient) GetResourceTypes(ctx context.Context, in *ProviderOpts, opts ...grpc.CallOption) (*ResourceTypes, error) {
	out := new(ResourceTypes)
	err := c.cc.Invoke(ctx, "/api.ResourceProvider/GetResourceTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceProviderClient) AssignResourceLink(ctx context.Context, in *ResourceBindingOpts, opts ...grpc.CallOption) (*ResourceBindings, error) {
	out := new(ResourceBindings)
	err := c.cc.Invoke(ctx, "/api.ResourceProvider/AssignResourceLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceProviderClient) RemoveResourceLink(ctx context.Context, in *ResourceBindingOpts, opts ...grpc.CallOption) (*ResourceBindings, error) {
	out := new(ResourceBindings)
	err := c.cc.Invoke(ctx, "/api.ResourceProvider/RemoveResourceLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceProviderServer is the server API for ResourceProvider service.
type ResourceProviderServer interface {
	RegisterProvider(context.Context, *ProviderRegistrationOpts) (*RegistrationStatus, error)
	DeRegisterProvider(context.Context, *ProviderRegistrationOpts) (*RegistrationStatus, error)
	GetResource(context.Context, *GetResourceOpts) (*Resource, error)
	ListResource(context.Context, *GetResourceOpts) (*Resources, error)
	GetResourceTypes(context.Context, *ProviderOpts) (*ResourceTypes, error)
	AssignResourceLink(context.Context, *ResourceBindingOpts) (*ResourceBindings, error)
	RemoveResourceLink(context.Context, *ResourceBindingOpts) (*ResourceBindings, error)
}

func RegisterResourceProviderServer(s *grpc.Server, srv ResourceProviderServer) {
	s.RegisterService(&_ResourceProvider_serviceDesc, srv)
}

func _ResourceProvider_RegisterProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProviderRegistrationOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceProviderServer).RegisterProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceProvider/RegisterProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceProviderServer).RegisterProvider(ctx, req.(*ProviderRegistrationOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceProvider_DeRegisterProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProviderRegistrationOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceProviderServer).DeRegisterProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceProvider/DeRegisterProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceProviderServer).DeRegisterProvider(ctx, req.(*ProviderRegistrationOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceProvider_GetResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourceOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceProviderServer).GetResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceProvider/GetResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceProviderServer).GetResource(ctx, req.(*GetResourceOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceProvider_ListResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResourceOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceProviderServer).ListResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceProvider/ListResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceProviderServer).ListResource(ctx, req.(*GetResourceOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceProvider_GetResourceTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProviderOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceProviderServer).GetResourceTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceProvider/GetResourceTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceProviderServer).GetResourceTypes(ctx, req.(*ProviderOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceProvider_AssignResourceLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceBindingOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceProviderServer).AssignResourceLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceProvider/AssignResourceLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceProviderServer).AssignResourceLink(ctx, req.(*ResourceBindingOpts))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceProvider_RemoveResourceLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceBindingOpts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceProviderServer).RemoveResourceLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceProvider/RemoveResourceLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceProviderServer).RemoveResourceLink(ctx, req.(*ResourceBindingOpts))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceProvider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ResourceProvider",
	HandlerType: (*ResourceProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterProvider",
			Handler:    _ResourceProvider_RegisterProvider_Handler,
		},
		{
			MethodName: "DeRegisterProvider",
			Handler:    _ResourceProvider_DeRegisterProvider_Handler,
		},
		{
			MethodName: "GetResource",
			Handler:    _ResourceProvider_GetResource_Handler,
		},
		{
			MethodName: "ListResource",
			Handler:    _ResourceProvider_ListResource_Handler,
		},
		{
			MethodName: "GetResourceTypes",
			Handler:    _ResourceProvider_GetResourceTypes_Handler,
		},
		{
			MethodName: "AssignResourceLink",
			Handler:    _ResourceProvider_AssignResourceLink_Handler,
		},
		{
			MethodName: "RemoveResourceLink",
			Handler:    _ResourceProvider_RemoveResourceLink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provider.proto",
}
